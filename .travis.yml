matrix:
  include:
    # Build for Ubuntu 16.04 (Makefile) (GCC)
    - language: cpp
      env:
        - NAME="Ubuntu 16.04 (Makefile)”
      compiler: gcc
      sudo: required
      services:
        - docker
      install:
        - cd docker/ubuntu-16.04/
        - docker build -t ubuntu .
        - cd ../..
      script:
        - export MAKEFLAGS="-j$((`grep -c ^processor /proc/cpuinfo`*2))"
        # Must supply the TRAVIS environment variables to the docker container so autorevision properly receives the revision info from Travis
        # To do this, append the following to the pertinent lines after —rm:
        # -e CI -e TRAVIS -e "TRAVIS_BUILD_DIR=/code" -e TRAVIS_BRANCH -e TRAVIS_COMMIT -e TRAVIS_PULL_REQUEST_BRANCH -e TRAVIS_TAG
        - docker run --rm -v $(pwd):/code ubuntu ./autogen.sh
        - docker run --rm -e MAKEFLAGS -v $(pwd):/code ubuntu ./configure
        - docker run --rm -e CI -e TRAVIS -e "TRAVIS_BUILD_DIR=/code" -e TRAVIS_BRANCH -e TRAVIS_COMMIT -e TRAVIS_PULL_REQUEST_BRANCH -e TRAVIS_TAG -e MAKEFLAGS -v $(pwd):/code ubuntu make
        - docker run --rm -e CI -e TRAVIS -e "TRAVIS_BUILD_DIR=/code" -e TRAVIS_BRANCH -e TRAVIS_COMMIT -e TRAVIS_PULL_REQUEST_BRANCH -e TRAVIS_TAG -e MAKEFLAGS -v $(pwd):/code ubuntu make check
        - docker run --rm -e CI -e TRAVIS -e "TRAVIS_BUILD_DIR=/code" -e TRAVIS_BRANCH -e TRAVIS_COMMIT -e TRAVIS_PULL_REQUEST_BRANCH -e TRAVIS_TAG -e MAKEFLAGS -v $(pwd):/code ubuntu sudo make install

    # Build for Ubuntu 16.04 (CMake) (GCC)
    - language: cpp
      env:
        - NAME="Ubuntu 16.04 (CMake)”
      compiler: gcc
      sudo: required
      services:
        - docker
      install:
        - cd docker/ubuntu-16.04/
        - docker build -t ubuntu .
        - cd ../..
      script:
        - export MAKEFLAGS="-j$((`grep -c ^processor /proc/cpuinfo`*2))"
        # Must supply the TRAVIS environment variables to the docker container so autorevision properly receives the revision info from Travis
        # To do this, append the following to the pertinent lines after —rm:
        # -e CI -e TRAVIS -e "TRAVIS_BUILD_DIR=/code" -e TRAVIS_BRANCH -e TRAVIS_COMMIT -e TRAVIS_PULL_REQUEST_BRANCH -e TRAVIS_TAG
        - docker run --rm -e CI -e TRAVIS -e "TRAVIS_BUILD_DIR=/code" -e TRAVIS_BRANCH -e TRAVIS_COMMIT -e TRAVIS_PULL_REQUEST_BRANCH -e TRAVIS_TAG -e MAKEFLAGS -v $(pwd):/code ubuntu cmake '-H.' -Bbuild -DCMAKE_BUILD_TYPE=Debug -G"Ninja"
        - docker run --rm -e CI -e TRAVIS -e "TRAVIS_BUILD_DIR=/code" -e TRAVIS_BRANCH -e TRAVIS_COMMIT -e TRAVIS_PULL_REQUEST_BRANCH -e TRAVIS_TAG -e MAKEFLAGS -v $(pwd):/code ubuntu cmake --build build

    ## NOTE: The following is commented-out until we solidify how we're caching Docker images
    ## (The current ubuntu Dockerfile does not install Clang.)
    ## Build for Ubuntu (CMake) (Clang)
    #- language: cpp
    #  env:
    #    - NAME="Ubuntu (CMake)”
    #  compiler: clang
    #  sudo: required
    #  services:
    #    - docker
    #  install:
    #    - cd docker/ubuntu-16.04/
    #    - docker build -t ubuntu .
    #    - cd ../..
    #  script:
    #    - export MAKEFLAGS="-j$((`grep -c ^processor /proc/cpuinfo`*2))"
    #    # Must supply the TRAVIS environment variables to the docker container so autorevision properly receives the revision info from Travis
    #    # To do this, append the following to the pertinent lines after —rm:
    #    # -e CI -e TRAVIS -e "TRAVIS_BUILD_DIR=/code" -e TRAVIS_BRANCH -e TRAVIS_COMMIT -e TRAVIS_PULL_REQUEST_BRANCH -e TRAVIS_TAG
    #    - docker run --rm -e "CC=clang" -e "CXX=clang++" -e CI -e TRAVIS -e "TRAVIS_BUILD_DIR=/code" -e TRAVIS_BRANCH -e TRAVIS_COMMIT -e TRAVIS_PULL_REQUEST_BRANCH -e TRAVIS_TAG -e MAKEFLAGS -v $(pwd):/code ubuntu cmake '-H.' -Bbuild -DCMAKE_BUILD_TYPE=Debug -G"Ninja"
    #    - docker run --rm -e "CC=clang" -e "CXX=clang++" -e CI -e TRAVIS -e "TRAVIS_BUILD_DIR=/code" -e TRAVIS_BRANCH -e TRAVIS_COMMIT -e TRAVIS_PULL_REQUEST_BRANCH -e TRAVIS_TAG -e MAKEFLAGS -v $(pwd):/code ubuntu cmake --build build

    # Build for Ubuntu 18.04 (Makefile) (GCC)
    - language: cpp
      env:
        - NAME="Ubuntu 18.04 (Makefile)”
      compiler: gcc
      sudo: required
      services:
        - docker
      install:
        - cd docker/ubuntu-18.04/
        - docker build -t ubuntu .
        - cd ../..
      script:
        - export MAKEFLAGS="-j$((`grep -c ^processor /proc/cpuinfo`*2))"
        # Must supply the TRAVIS environment variables to the docker container so autorevision properly receives the revision info from Travis
        # To do this, append the following to the pertinent lines after —rm:
        # -e CI -e TRAVIS -e "TRAVIS_BUILD_DIR=/code" -e TRAVIS_BRANCH -e TRAVIS_COMMIT -e TRAVIS_PULL_REQUEST_BRANCH -e TRAVIS_TAG
        - docker run --rm -v $(pwd):/code ubuntu ./autogen.sh
        - docker run --rm -e MAKEFLAGS -v $(pwd):/code ubuntu ./configure
        - docker run --rm -e CI -e TRAVIS -e "TRAVIS_BUILD_DIR=/code" -e TRAVIS_BRANCH -e TRAVIS_COMMIT -e TRAVIS_PULL_REQUEST_BRANCH -e TRAVIS_TAG -e MAKEFLAGS -v $(pwd):/code ubuntu make
        - docker run --rm -e CI -e TRAVIS -e "TRAVIS_BUILD_DIR=/code" -e TRAVIS_BRANCH -e TRAVIS_COMMIT -e TRAVIS_PULL_REQUEST_BRANCH -e TRAVIS_TAG -e MAKEFLAGS -v $(pwd):/code ubuntu make check
        - docker run --rm -e CI -e TRAVIS -e "TRAVIS_BUILD_DIR=/code" -e TRAVIS_BRANCH -e TRAVIS_COMMIT -e TRAVIS_PULL_REQUEST_BRANCH -e TRAVIS_TAG -e MAKEFLAGS -v $(pwd):/code ubuntu sudo make install

    # Package source (Ubuntu 18.04, CMake)
    - language: cpp
      env:
        - NAME="Package Source (Ubuntu 18.04, CMake)"
      compiler: gcc
      sudo: required
      services:
        - docker
      install:
        - cd docker/ubuntu-18.04/
        - docker build -t ubuntu .
        - cd ../..
      before_script:
        # Package the source tarball
        - export MAKEFLAGS="-j$((`grep -c ^processor /proc/cpuinfo`*2))"
        # Must supply the TRAVIS environment variables to the docker container so autorevision properly receives the revision info from Travis
        # To do this, append the following to the pertinent lines after —rm:
        # -e CI -e TRAVIS -e "TRAVIS_BUILD_DIR=/code" -e TRAVIS_BRANCH -e TRAVIS_COMMIT -e TRAVIS_PULL_REQUEST_BRANCH -e TRAVIS_TAG
        - docker run --rm -e CI -e TRAVIS -e "TRAVIS_BUILD_DIR=/code" -e TRAVIS_BRANCH -e TRAVIS_COMMIT -e TRAVIS_PULL_REQUEST_BRANCH -e TRAVIS_TAG -e MAKEFLAGS -v $(pwd):/code ubuntu cmake -P "/code/build_tools/ci/travis/prepare_git_repo.cmake"
        - docker run --rm -e CI -e TRAVIS -e "TRAVIS_BUILD_DIR=/code" -e TRAVIS_BRANCH -e TRAVIS_COMMIT -e TRAVIS_PULL_REQUEST_BRANCH -e TRAVIS_TAG -e MAKEFLAGS -v $(pwd):/code ubuntu cmake '-H.' -Bbuild -DCMAKE_BUILD_TYPE=Debug -G"Ninja"
        - docker run --rm -e CI -e TRAVIS -e "TRAVIS_BUILD_DIR=/code" -e TRAVIS_BRANCH -e TRAVIS_COMMIT -e TRAVIS_PULL_REQUEST_BRANCH -e TRAVIS_TAG -e MAKEFLAGS -v $(pwd):/code ubuntu cmake --build build --target package_source
        # Extract the .tar.xz into a new location
        - mkdir extracted && tar -xf build/warzone2100.tar.xz -C extracted
      script:
        # Attempt a build from the tarball source (using CMake)
        - docker run --rm -e CI -e TRAVIS -e "TRAVIS_BUILD_DIR=/code" -e TRAVIS_BRANCH -e TRAVIS_COMMIT -e TRAVIS_PULL_REQUEST_BRANCH -e TRAVIS_TAG -e MAKEFLAGS -v $(pwd)/extracted/warzone2100:/code ubuntu cmake '-H.' -Bbuild -DCMAKE_BUILD_TYPE=Debug -G"Ninja"
        - docker run --rm -e CI -e TRAVIS -e "TRAVIS_BUILD_DIR=/code" -e TRAVIS_BRANCH -e TRAVIS_COMMIT -e TRAVIS_PULL_REQUEST_BRANCH -e TRAVIS_TAG -e MAKEFLAGS -v $(pwd)/extracted/warzone2100:/code ubuntu cmake --build build
      # after_success:
        # TODO: Copy & rename the /code/warzone2100.tar.xz
        # TODO: Output the SHA512 of the .tar.xz
        # TODO: Deploy the generated .tar.xz to the buildbot

    # Build for macOS
    # (This also deploys the macOS build to the buildbot)
    - language: objective-c
      env:
        - NAME="macOS"
      os: osx
      osx_image: xcode8.3
      before_install:
        #- brew update
        - brew install gettext
        - brew install asciidoc
        - brew install docbook-xsl
        - gem install xcpretty --no-rdoc --no-ri --no-document --quiet
        - gem install xcpretty-travis-formatter --no-rdoc --no-ri --no-document --quiet
      script:
        - macosx/BuildBot/travis_build.sh regular "tmp/wz_upload"
      after_success:
        - macosx/BuildBot/travis_deploy.sh "tmp/wz_upload" "warzone2100-*_macOS.zip" --cleanold

# The channel name "chat.freenode.net#warzone2100-dev" is encrypted against Warzone2100/warzone2100 to prevent IRC spam of forks
notifications:
  irc: 
    channels: 
      - secure: AvYOScfrjmtSqC6+qvVe3nxCjonN07eNp6ebzT3YdBo9e0JH4/elxSJVRC96E8ViSGia/6m8rBWMSEoJhDkykyUSVCn/gHr2FRtCNJz+iJ7ZEgzx90++q5XxtJM4R49e5HDF5dyoImiuwREXXhhqDX1oKCqFRgI4M17XfsYD+NM=
    on_success: always # default: always
    on_failure: always # default: always
    use_notice: true
    skip_join: true
    template:
      - "[travis-ci] \x0313%{repository_slug}\x03/\x036%{branch}\x03 \x0314%{commit}\x03 \x0315%{author}\x03: Build #%{build_number}: \x031%{message}\x03  Build details: %{build_url}"
