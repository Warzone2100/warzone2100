name: warzone2100 # no spaces, all lower-case
# summary, description, and icon are parsed from the appdata/metainfo file
adopt-info: warzone2100
confinement: strict
grade: stable
base: core20

# Enable LZO compression for the snap
compression: lzo

# Limit architectures to those supported by the gnome extension (and future core20)
# NOTE: Specify these as separate build-on lines to ensure separate architecture builds that each support a single architecture
architectures:
  - build-on: amd64
  - build-on: arm64
  - build-on: armhf

layout:
  /usr/share/vulkan:
    symlink: $SNAP/usr/share/vulkan
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvulkan_intel.so:
    symlink: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvulkan_intel.so
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvulkan_radeon.so:
    symlink: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvulkan_radeon.so
#  # Try the following once base is updated to core22
#  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvulkan_broadcom.so:
#    symlink: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvulkan_broadcom.so
#  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvulkan_freedreno.so:
#    symlink: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvulkan_freedreno.so
#  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvulkan_lvp.so:
#    symlink: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvulkan_lvp.so

plugs:
  wz2100-sequences:
    interface: content
    content: wz2100-sequences
    target: $SNAP/usr/share/warzone2100/sequences
    default-provider: warzone2100-videos

apps:
  warzone2100:
    extensions: [gnome-3-38]
    command: usr/bin/warzone2100
    common-id: warzone2100 # should match the appdata/metainfo file's <id> field
    desktop: usr/share/applications/warzone2100.desktop
    plugs:
      - audio-playback
      - desktop
      - desktop-legacy
      - network
      - network-bind
      - opengl
      - pulseaudio
      - unity7
      - wayland
      - x11

parts:
  sdl:
    source: https://www.libsdl.org/release/SDL2-2.0.20.tar.gz
    source-checksum: sha512/4889949eaa674948bdb0a01bb2a842a0943b15b08ff27ec0079b0fd4f79d071ffb32488a5a51c12ad7c74ed5fe73b608cdf6336a44c95dae8a0fb3f47d0f01de
    plugin: autotools
    autotools-configure-parameters:
    - --prefix=/usr
    - --disable-alsa
    - --disable-arts
    - --disable-esd
    - --disable-nas
    - --disable-oss
    override-build: |
      snapcraftctl build
      sed -i 's|"/usr"|"'"$SNAPCRAFT_STAGE/usr"'"|g' "$SNAPCRAFT_PART_INSTALL/usr/lib/cmake/SDL2/sdl2-config.cmake"
    build-packages:
    - git
    - libdbus-1-dev
    - libudev-dev
    - fcitx-libs-dev
    - libegl1-mesa-dev
    - libgl1-mesa-dev
    - libgles2-mesa-dev
    - libibus-1.0-dev
    - libjack-dev
    - libpulse-dev
    - libsamplerate0-dev
    - libsndfile1-dev
    - libts-dev
    - libvulkan-dev
    - libwayland-dev
    - libx11-dev
    - libxcursor-dev
    - libxfixes-dev
    - libxext-dev
    - libxi-dev
    - libxinerama-dev
    - libxkbcommon-dev
    - libxrandr-dev
    - libxrender-dev
    - libxss-dev
    - libxxf86vm-dev
    - libgbm-dev
    stage-packages:
    - libdbus-1-3
    - libudev1
    - fcitx-libs
    - libdrm2
    - libgbm1
    - libegl1-mesa
    - libgl1
    - libgles2
    - libibus-1.0-5
    - libjack0
    - libpulse0
    - libsamplerate0
    - libts0
    - libsndfile1
    - libwayland-client0
    - libwayland-cursor0
    - libwayland-egl1-mesa
    - libvulkan1
    - libx11-6
    - libxcursor1
    - libxext6
    - libxfixes3
    - libxi6
    - libxinerama1
    - libxkbcommon0
    - libxrandr2
    - libxrender1
    - libxss1
    - libxxf86vm1

  warzone2100:
    after: [sdl]
    plugin: cmake
    source: .
    parse-info:
      # Parse this appdata/metainfo file for summary, description,
      # and icon. Use the installed path relative to the Snap's root
      - usr/share/metainfo/warzone2100.appdata.xml
    override-pull: |
      snapcraftctl pull
      SNAP_VERSION_DESC=$(git describe --always | sed 's/[^a-zA-Z0-9\.\:\+\~\-]/~/g')
      snapcraftctl set-version "${SNAP_VERSION_DESC}"
      git submodule update --init
    override-build: |
      echo "SNAPCRAFT_TARGET_ARCH=${SNAPCRAFT_TARGET_ARCH}"
      echo "SNAPCRAFT_ARCH_TRIPLET=${SNAPCRAFT_ARCH_TRIPLET}"
      
      # Install Vulkan SDK
      . "${SNAPCRAFT_PART_SRC}/.ci/snap/install_vulkan_sdk.sh"
      
      if [ -f ".snapenv" ]; then set -a; source .snapenv; set +a; fi
      set +u
      if [ -z "$WZ_DISTRIBUTOR" ]; then export WZ_DISTRIBUTOR="UNKNOWN"; fi
      cmake -S "$SNAPCRAFT_PART_SRC" -B. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -DWZ_ENABLE_WARNINGS:BOOL=ON -DWZ_DISTRIBUTOR:STRING="${WZ_DISTRIBUTOR}" -DWZ_OUTPUT_NAME_SUFFIX="${WZ_OUTPUT_NAME_SUFFIX}" -DWZ_NAME_SUFFIX="${WZ_NAME_SUFFIX}" -G"Ninja"
      cmake --build . -- -j$SNAPCRAFT_PARALLEL_BUILD_COUNT
      DESTDIR=$SNAPCRAFT_PART_INSTALL cmake --build . -- install
      
      # Include the icon's path in the desktop file, not just the name.
      # This needs to happen post-build or the build versioning will show as "modified locally"
      sed -i -E 's|Icon=(.*)|Icon=/usr/share/icons/\1.png|' $SNAPCRAFT_PART_INSTALL/usr/share/applications/warzone2100.desktop
    build-packages:
      - asciidoctor
      - g++
      - gettext
      - libfontconfig1-dev
      - libfreetype-dev
      - libfribidi-dev
      - libharfbuzz-dev
      - libopenal-dev
      - libphysfs-dev
      - libpng-dev
      - libtheora-dev
      - libogg-dev
      - libopus-dev
      - libvorbis-dev
      - libcurl4-gnutls-dev
      - libgnutls28-dev
      - libsodium-dev
      - libsqlite3-dev
      - ninja-build
      - unzip
      - wget
      - zip
    stage-packages:
      - libfontconfig1
      - libfreetype6
      - libfribidi0
      - libharfbuzz0b
      - libogg0
      - libopenal1
      - libopus0
      - libphysfs1
      - libpng16-16
      - libtheora0
      - libvorbis0a
      - libvorbisenc2
      - libvorbisfile3
      - libvulkan1
      - libcurl3-gnutls
      - libsodium23
      - libsqlite3-0
      - libglu1-mesa
      - mesa-vulkan-drivers
      - unzip
      - zip

  # This part removes all the files in this snap which already exist in
  # connected content and base snaps. Since these files will be available
  # at runtime from the content and base snaps, they do not need to be
  # included in this snap itself.
  #
  # More info: https://forum.snapcraft.io/t/reducing-the-size-of-desktop-snaps/17280#heading--cleanup-part
  #
  cleanup:
    after:  # Make this part run last; list all your other parts here
      - sdl
      - warzone2100
    plugin: nil
    build-snaps:  # List all content-snaps and base snaps you're using here
      - core20
      - gtk-common-themes
      - gnome-3-38-2004
    override-prime: |
      set -eux
      for snap in "core20" "gtk-common-themes" "gnome-3-38-2004"; do  # List all content-snaps and base snaps you're using here
          cd "/snap/$snap/current" && find . -type f,l -exec rm -f "$SNAPCRAFT_PRIME/{}" \;
      done
      # The following is required while using core18 + gnome-3-34
      # See: https://forum.snapcraft.io/t/undefined-symbol-hb-buffer-set-invisible-glyph-with-gnome-3-34/24287
      rm -f $SNAPCRAFT_PRIME/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libharfbuzz.so.0*
      rm -f $SNAPCRAFT_PRIME/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libgio-2.0.so.0*
      rm -f $SNAPCRAFT_PRIME/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libglib-2.0.so.0*
