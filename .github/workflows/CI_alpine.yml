name: Alpine

on:
  push:
    branches-ignore:
      - 'l10n_**' # Push events to translation service branches (that begin with "l10n_")
  pull_request:
    # Match all pull requests

jobs:
  alpine-latest:
    strategy:
      matrix:
        include:
          - name: "Alpine :LATEST [GCC]"
            compiler: 'gcc'
            cc: '/usr/bin/gcc'
            cxx: '/usr/bin/g++'
      fail-fast: false
    name: '${{ matrix.name }}'
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        path: 'src'
    - name: Prepare Git Repo for autorevision
      working-directory: '${{ github.workspace }}/src'
      run: cmake -P .ci/githubactions/prepare_git_repo.cmake
    - name: Init Git Submodules
      working-directory: '${{ github.workspace }}/src'
      run: git submodule update --init --recursive
    - name: Build the Docker image
      working-directory: '${{ github.workspace }}/src'
      run: |
        docker build -f docker/alpine-latest/Dockerfile -t alpine .
    - name: Prep Directories
      run: |
        mkdir -p "${{ github.workspace }}/build"
    - name: CMake Configure
      working-directory: '${{ github.workspace }}/build'
      env:
        CC: ${{ matrix.cc }}
        CXX: ${{ matrix.cxx }}
      run: |
        echo "::add-matcher::${GITHUB_WORKSPACE}/src/.ci/githubactions/pattern_matchers/cmake.json"
        docker run --rm -w "${GITHUB_WORKSPACE}/build" -e CC -e CXX -e "CI=true" -e GITHUB_WORKFLOW -e GITHUB_ACTIONS -e GITHUB_REPOSITORY -e GITHUB_WORKSPACE -e GITHUB_SHA -e GITHUB_REF -e GITHUB_HEAD_REF -e GITHUB_BASE_REF -e MAKEFLAGS -v "${GITHUB_WORKSPACE}:${GITHUB_WORKSPACE}" alpine cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DWZ_ENABLE_WARNINGS:BOOL=OFF -DWZ_FINDSDL2_NOCONFIG:BOOL=ON "${{ github.workspace }}/src"
        echo "::remove-matcher owner=cmake::"
    - name: CMake Build
      working-directory: '${{ github.workspace }}/build'
      env:
        WZ_COMPILER: ${{ matrix.compiler }}
        CC: ${{ matrix.cc }}
        CXX: ${{ matrix.cxx }}
      run: |
        if [ "$WZ_COMPILER" == "clang" ]; then
          echo "::add-matcher::${GITHUB_WORKSPACE}/src/.ci/githubactions/pattern_matchers/clang.json"
        else
          echo "::add-matcher::${GITHUB_WORKSPACE}/src/.ci/githubactions/pattern_matchers/gcc.json"
        fi
        docker run --rm -w "${GITHUB_WORKSPACE}/build" -e CC -e CXX -e "CI=true" -e GITHUB_WORKFLOW -e GITHUB_ACTIONS -e GITHUB_REPOSITORY -e GITHUB_WORKSPACE -e GITHUB_SHA -e GITHUB_REF -e GITHUB_HEAD_REF -e GITHUB_BASE_REF -e MAKEFLAGS -v "${GITHUB_WORKSPACE}:${GITHUB_WORKSPACE}" alpine cmake --build .
        if [ "$WZ_COMPILER" == "clang" ]; then
          echo "::remove-matcher owner=clang::"
        else
          echo "::remove-matcher owner=gcc::"
        fi
