app-id: net.wz2100.wz2100@WZ_OUTPUT_NAME_SUFFIX@
# We need to force the target architecture for the runtime, to support cross-compilation
runtime: org.freedesktop.Platform@WZ_RUNTIME_SUFFIX@
runtime-version: '22.08'
sdk: org.freedesktop.Sdk
command: warzone2100
@WZ_CROSS_COMPILE_SDK_EXTENSIONS@
separate-locales: false
finish-args: 
  - --socket=wayland
  - --share=ipc
  - --socket=x11
  - --device=dri
  - --socket=pulseaudio
  - --share=network
cleanup:
  - /include
  - /lib/cmake
  - /lib/pkgconfig
  - /share/gtk-doc
  - /share/man
  - /share/pkgconfig
  - '*.a'
  - '*.la'

x-compat-aarch64-build-options: &compat-aarch64-build-options
  # Add the cross compiler to the PATH
  append-path: /usr/lib/sdk/toolchain-aarch64/bin
  # binutils are available there in a different path. GCC knows
  # where to get them. But if we need access to those tools,
  # they can be added to the path that way:
  # prepend-path: /usr/lib/sdk/toolchain-aarch64/aarch64-unknown-linux-gnu/bin
  # Use the proper pkg-config path
  prepend-pkg-config-path: /usr/lib/aarch64-linux-gnu/pkgconfig
  # Because default CFLAGS are architecture-specific, we need
  # to reset them to something more portable.
  cflags: -O2 -g -pipe -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fexceptions -fstack-protector-strong -grecord-gcc-switches -fasynchronous-unwind-tables -fstack-clash-protection -fno-omit-frame-pointer
  cflags-override: true
  cxxflags: -O2 -g -pipe -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fexceptions -fstack-protector-strong -grecord-gcc-switches -fasynchronous-unwind-tables -fstack-clash-protection -fno-omit-frame-pointer
  cxxflags-override : true

modules:
  
  @WZ_CROSS_FILES_SETUP@

  - name: asciidoctor
    cleanup:
      - '*'
    buildsystem: simple
    build-commands:
      - gem install --install-dir /files/lib/ruby/gems/temp --bindir /app/bin asciidoctor-2.0.17.gem
    sources:
      - type: file
        url: https://rubygems.org/downloads/asciidoctor-2.0.17.gem
        sha256: ed5b5e399e8d64994cc16f0983f993d6e33990909a8415b6fc8b786cdeb00f3d

  - name: sentry-native
    cleanup:
      - '*'
    buildsystem: simple
    build-commands:
      - mkdir -p /app/prestaged-dl
      - cp "sentry-native.zip" /app/prestaged-dl
    sources:
      - type: file
        url: @WZ_SENTRY_NATIVE_URL@
        sha512: @WZ_SENTRY_NATIVE_SHA512@
        dest-filename: sentry-native.zip

  - name: glslc
    buildsystem: cmake-ninja
    builddir: true
    build-options:
      no-debuginfo: true
    # Always build for host - do not include WZ_CROSS_BUILD_OPTIONS
    cleanup:
      - '*'
    config-opts:
      - -DCMAKE_BUILD_TYPE=Release
      - -DSHADERC_SKIP_INSTALL=OFF
      - -DSHADERC_SKIP_TESTS=ON
      - -DSHADERC_SKIP_EXAMPLES=ON
      - -DENABLE_CODE_COVERAGE=OFF
      - -DSKIP_SPIRV_TOOLS_INSTALL=ON
      - -DSKIP_GLSLANG_INSTALL=ON
    sources:
      - type: git
        url: https://github.com/google/shaderc.git
        tag: v2022.2
        commit: 551f106dc64a1cacb298cc2f05613d142b53302f
      # Replicate the needed functionality of utils/git-sync-deps
      # To avoid having to break the build sandbox to download files
      - type: git
        url: https://github.com/KhronosGroup/SPIRV-Headers.git
        commit: 0bcc624926a25a2a273d07877fd25a6ff5ba1cfb # retrieved from DEPS in https://github.com/google/shaderc @ tag
        dest: third_party/spirv-headers
      - type: git
        url: https://github.com/KhronosGroup/SPIRV-Tools.git
        commit: 3a8a961cffb7699422a05dcbafdd721226b4547d # retrieved from DEPS in https://github.com/google/shaderc @ tag
        dest: third_party/spirv-tools
      - type: git
        url: https://github.com/KhronosGroup/glslang.git
        commit: f771c1293dce29e1ac3557cf994169136155c81f # retrieved from DEPS in https://github.com/google/shaderc @ tag
        dest: third_party/glslang

  - name: physfs
    buildsystem: cmake-ninja
    builddir: true
    @WZ_CROSS_BUILD_OPTIONS@
    config-opts:
    - -DCMAKE_INSTALL_PREFIX=/app
    - -DCMAKE_BUILD_TYPE=Release
    - -DPHYSFS_BUILD_TEST=OFF
    @WZ_CMAKE_CROSS_CONFIG_OPTIONS@
    sources:
      - type: archive
        url: 'http://icculus.org/physfs/downloads/physfs-3.0.2.tar.bz2'
        sha1: 6a15c458898d0570101d8f173201cde9ced78df7
      
  - name: fribidi
    buildsystem: meson
    builddir: true
    @WZ_CROSS_BUILD_OPTIONS@
    config-opts:
    @WZ_MESON_CROSS_CONFIG_OPTIONS@
    - -Ddocs=false
    - -Dbin=false
    - -Dtests=false
    sources:
      - type: git
        url: https://github.com/fribidi/fribidi
        tag: v1.0.11
        commit: 247fddc3599e3fe7b1b5cc21020c9eb51e662637

  - name: libsodium
    @WZ_CROSS_BUILD_OPTIONS@
    config-opts:
    @WZ_AUTOTOOLS_CROSS_CONFIG_OPTIONS@
    sources:
      - type: archive
        url: https://github.com/jedisct1/libsodium/releases/download/1.0.18-RELEASE/libsodium-1.0.18.tar.gz
        sha256: 6f504490b342a4f8a4c4a02fc9b866cbef8622d5df4e5452b46be121e46636c1

  - name: warzone2100
    buildsystem: cmake-ninja
    builddir: true
    @WZ_CROSS_BUILD_OPTIONS@
    config-opts:
      - -DCMAKE_BUILD_TYPE=Release
      - -DWZ_SKIP_OUTPUT_NAME_SUFFIX_ON_BINARY=ON
      - -DWZ_APPSTREAM_ID=net.wz2100.wz2100
      - -DWZ_BUILD_SENTRY:BOOL=ON
      - -DWZ_SENTRY_PREDOWNLOADED_SENTRY_ARCHIVE=/app/prestaged-dl/sentry-native.zip
      @WZ_CMAKE_CROSS_CONFIG_OPTIONS@
    secret-opts:
      - -DWZ_DISTRIBUTOR:STRING=$WZ_DISTRIBUTOR
      - -DDISCORD_RPC_APPID:STRING=$DISCORD_RPC_APPID
      - -DSENTRY_IO_DSN:STRING=$SENTRY_IO_DSN
      - -DWZ_OUTPUT_NAME_SUFFIX=$WZ_OUTPUT_NAME_SUFFIX
      - -DWZ_NAME_SUFFIX=$WZ_NAME_SUFFIX
    secret-env:
      - WZ_OUTPUT_NAME_SUFFIX
    sources:
      - type: dir
        path: ../../
      - type: file
        url: https://github.com/Warzone2100/wz-sequences/releases/download/v3/standard-quality-en-sequences.wz
        sha256: 142ae905be288cca33357a49f42b884c190e828fc0b1b1773ded5dff774f41a3        
    post-install:
      - mkdir -p /app/share/icons/hicolor/128x128/apps
      - cp /app/share/icons/net.wz2100.wz2100*.png /app/share/icons/hicolor/128x128/apps/
      - install -Dm644 ../standard-quality-en-sequences.wz /app/share/warzone2100${WZ_OUTPUT_NAME_SUFFIX}/sequences.wz
